<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/COMMIT_MESSAGE.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/COMMIT_MESSAGE.txt" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Navbar.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Navbar.jsx" />
              <option name="originalContent" value="// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;&#10;&#10;import React, { useState, useEffect } from 'react';&#10;import { useNavigate, Link, href } from 'react-router-dom';&#10;import Switch from '../DarkModeToggle';&#10;import { jwtDecode } from 'jwt-decode';&#10;import { useAuth } from '@clerk/clerk-react';&#10;&#10;const Navbar = () =&gt; {&#10;  const navigate = useNavigate();&#10;  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);&#10;  const { isSignedIn, signOut } = useAuth();&#10;&#10;  // Close menu on route change or navigation&#10;  const handleNav = (cb) =&gt; {&#10;    setMobileMenuOpen(false);&#10;    if (cb) cb();&#10;  };&#10;&#10;  // Handle logout&#10;  const handleLogout = async () =&gt; {&#10;    if (signOut) {&#10;      await signOut(); // Clerk: clears session and data&#10;    }&#10;    localStorage.removeItem(&quot;token&quot;);&#10;    window.dispatchEvent(new Event(&quot;storage-update&quot;));&#10;    navigate(&quot;/&quot;);&#10;  };&#10;&#10;  // Close menu on Escape key&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onKeyDown = (e) =&gt; {&#10;      if (e.key === 'Escape') setMobileMenuOpen(false);&#10;    };&#10;    window.addEventListener('keydown', onKeyDown);&#10;    return () =&gt; window.removeEventListener('keydown', onKeyDown);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // Close menu when clicking outside&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onClick = (e) =&gt; {&#10;      if (e.target.closest('#mobile-nav-panel') || e.target.closest('#mobile-nav-toggle')) return;&#10;      setMobileMenuOpen(false);&#10;    };&#10;    document.addEventListener('mousedown', onClick);&#10;    return () =&gt; document.removeEventListener('mousedown', onClick);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // âœ… Check if logged-in user is admin&#10;  const token = localStorage.getItem('token');&#10;  let isAdmin = false;&#10;&#10;  try {&#10;    if (token) {&#10;      const decoded = jwtDecode(token);&#10;      isAdmin = decoded.role === 'admin';&#10;    }&#10;  } catch (err) {&#10;    console.error('Invalid token');&#10;  }&#10;&#10;  const navLinks = [&#10;    {&#10;      title: &quot;Civic Education &amp; Rights&quot;,&#10;      href: &quot;/civic-education&quot;&#10;    },&#10;    {&#10;      title: &quot;About&quot;,&#10;      href: &quot;/about&quot;&#10;    },&#10;    {&#10;      title: &quot;Contact Us&quot;,&#10;      href: &quot;/contact&quot;&#10;    },&#10;    {&#10;      title: &quot;Our contributors&quot;,&#10;      href: &quot;/contributors&quot;&#10;    },&#10;&#10;  ]&#10;&#10;  return (&#10;    &lt;header className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&gt;&#10;      &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;        &lt;button onClick={() =&gt; { setMobileMenuOpen(false); navigate('/'); }} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;          &lt;svg&#10;            xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;            width=&quot;24&quot;&#10;            height=&quot;24&quot;&#10;            viewBox=&quot;0 0 24 24&quot;&#10;            fill=&quot;none&quot;&#10;            stroke=&quot;currentColor&quot;&#10;            strokeWidth=&quot;2&quot;&#10;            strokeLinecap=&quot;round&quot;&#10;            strokeLinejoin=&quot;round&quot;&#10;            className=&quot;h-6 w-6 text-emerald-500&quot;&#10;          &gt;&#10;            &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;            &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;          &lt;/svg&gt;&#10;          &lt;span id=&quot;logo&quot; className=&quot;text-xl font-bold&quot; onClick={() =&gt; window.scrollTo({ top: 0, behavior: 'smooth' })}&gt;Civix&lt;/span&gt;&#10;        &lt;/button&gt;&#10;&#10;        {/* Desktop nav - only show on large screens */}&#10;        &lt;nav className=&quot;hidden lg:flex gap-6&quot;&gt;&#10;          {navLinks.map((navItem) =&gt; (&#10;            &lt;Link key={navItem.title}&#10;              to={navItem.href}&#10;              className='text-sm font-medium hover:text-emerald-500 transition-colors duration-300'&#10;            &gt;&#10;              {navItem.title}&#10;            &lt;/Link&gt;&#10;          ))}&#10;        &lt;/nav&gt;&#10;&#10;&#10;        {/* Hamburger for mobile and tablet */}&#10;        &lt;button&#10;          id=&quot;mobile-nav-toggle&quot;&#10;          className=&quot;lg:hidden flex items-center justify-center p-2 rounded focus:outline-none focus:ring-2 focus:ring-emerald-500&quot;&#10;          aria-label={mobileMenuOpen ? 'Close navigation menu' : 'Open navigation menu'}&#10;          aria-expanded={mobileMenuOpen}&#10;          onClick={() =&gt; setMobileMenuOpen((open) =&gt; !open)}&#10;        &gt;&#10;          &lt;svg className=&quot;h-7 w-7 text-emerald-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;            {mobileMenuOpen ? (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M6 18L18 6M6 6l12 12&quot; /&gt;&#10;            ) : (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M4 8h16M4 16h16&quot; /&gt;&#10;            )}&#10;          &lt;/svg&gt;&#10;        &lt;/button&gt;&#10;&#10;        &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;          &lt;Switch /&gt;&#10;          {/* Dashboard link for authenticated users */}&#10;          {(isSignedIn || token) &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;&#10;          {isAdmin &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate('/admin')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Admin Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;          &#10;          {/* Show logout button when authenticated, login/signup when not */}&#10;          {isSignedIn || token ? (&#10;            &lt;button&#10;              onClick={handleLogout}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-white hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Logout&#10;            &lt;/button&gt;&#10;          ) : (&#10;            &lt;&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/login')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Login&#10;              &lt;/button&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/signup')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Get Started&#10;              &lt;/button&gt;&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Mobile/Tablet menu overlay and panel */}&#10;      {mobileMenuOpen &amp;&amp; (&#10;        &lt;&gt;&#10;          {/* Dark overlay */}&#10;          &lt;div&#10;            className=&quot;lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm animate-fade-in&quot;&#10;            onClick={() =&gt; setMobileMenuOpen(false)}&#10;            aria-hidden=&quot;true&quot;&#10;          /&gt;&#10;          {/* Panel */}&#10;          &lt;div className=&quot;lg:hidden fixed inset-x-0 top-0 z-[100] animate-fade-slide-up&quot;&gt;&#10;            &lt;nav id=&quot;mobile-nav-panel&quot; className=&quot;relative flex flex-col items-center w-full h-[100vh] bg-white dark:bg-[#18181b] pt-24 gap-6 shadow-xl&quot;&gt;&#10;              &lt;button&#10;                className=&quot;absolute top-6 right-6 text-3xl text-emerald-600 focus:outline-none&quot;&#10;                aria-label=&quot;Close navigation menu&quot;&#10;                onClick={() =&gt; setMobileMenuOpen(false)}&#10;              &gt;&#10;                &amp;times;&#10;              &lt;/button&gt;&#10;&#10;&#10;              {navLinks.map((navItem) =&gt; (&#10;                &lt;Link key={navItem.title}&#10;                  to={navItem.href}&#10;                  onClick={() =&gt; handleNav()}&#10;                  className='text-lg font-medium hover:text-emerald-500 transition-colors duration-300'&#10;                &gt;&#10;                  {navItem.title}&#10;                &lt;/Link&gt;&#10;              ))}&#10;&#10;              {/* Dashboard link for authenticated users in mobile menu */}&#10;              {(isSignedIn || token) &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {isAdmin &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate('/admin'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Admin Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;              &#10;              {/* Show logout button when authenticated, login/signup when not */}&#10;              {isSignedIn || token ? (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(handleLogout)}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Logout&#10;                &lt;/button&gt;&#10;              ) : (&#10;                &lt;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/login'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium border border-input hover:bg-accent hover:text-accent-foreground h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Login&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/signup'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Get Started&#10;                  &lt;/button&gt;&#10;                &lt;/&gt;&#10;              )}&#10;            &lt;/nav&gt;&#10;          &lt;/div&gt;&#10;        &lt;/&gt;&#10;      )}&#10;    &lt;/header&gt;&#10;  );&#10;};&#10;&#10;export default Navbar;&#10;&#10;&#10;&#10;&#10;// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;" />
              <option name="updatedContent" value="// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;&#10;&#10;import React, { useState, useEffect } from 'react';&#10;import { useNavigate, Link } from 'react-router-dom';&#10;import Switch from '../DarkModeToggle';&#10;import { jwtDecode } from 'jwt-decode';&#10;import { useAuth } from '@clerk/clerk-react';&#10;&#10;const Navbar = () =&gt; {&#10;  const navigate = useNavigate();&#10;  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);&#10;  const { isSignedIn, signOut } = useAuth();&#10;&#10;  // Close menu on route change or navigation&#10;  const handleNav = (cb) =&gt; {&#10;    setMobileMenuOpen(false);&#10;    if (cb) cb();&#10;  };&#10;&#10;  // Handle logout&#10;  const handleLogout = async () =&gt; {&#10;    if (signOut) {&#10;      await signOut(); // Clerk: clears session and data&#10;    }&#10;    localStorage.removeItem(&quot;token&quot;);&#10;    window.dispatchEvent(new Event(&quot;storage-update&quot;));&#10;    navigate(&quot;/&quot;);&#10;  };&#10;&#10;  // Close menu on Escape key&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onKeyDown = (e) =&gt; {&#10;      if (e.key === 'Escape') setMobileMenuOpen(false);&#10;    };&#10;    window.addEventListener('keydown', onKeyDown);&#10;    return () =&gt; window.removeEventListener('keydown', onKeyDown);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // Close menu when clicking outside&#10;  useEffect(() =&gt; {&#10;    if (!mobileMenuOpen) return;&#10;    const onClick = (e) =&gt; {&#10;      if (e.target.closest('#mobile-nav-panel') || e.target.closest('#mobile-nav-toggle')) return;&#10;      setMobileMenuOpen(false);&#10;    };&#10;    document.addEventListener('mousedown', onClick);&#10;    return () =&gt; document.removeEventListener('mousedown', onClick);&#10;  }, [mobileMenuOpen]);&#10;&#10;  // âœ… Check if logged-in user is admin&#10;  const token = localStorage.getItem('token');&#10;  let isAdmin = false;&#10;&#10;  try {&#10;    if (token) {&#10;      const decoded = jwtDecode(token);&#10;      isAdmin = decoded.role === 'admin';&#10;    }&#10;  } catch (err) {&#10;    console.error('Invalid token');&#10;  }&#10;&#10;  const navLinks = [&#10;    {&#10;      title: &quot;Civic Education &amp; Rights&quot;,&#10;      href: &quot;/civic-education&quot;&#10;    },&#10;    {&#10;      title: &quot;About&quot;,&#10;      href: &quot;/about&quot;&#10;    },&#10;    {&#10;      title: &quot;Contact Us&quot;,&#10;      href: &quot;/contact&quot;&#10;    },&#10;    {&#10;      title: &quot;Our contributors&quot;,&#10;      href: &quot;/contributors&quot;&#10;    },&#10;&#10;  ]&#10;&#10;  return (&#10;    &lt;header className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&gt;&#10;      &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;        &lt;button onClick={() =&gt; { setMobileMenuOpen(false); navigate('/'); }} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;          &lt;svg&#10;            xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;            width=&quot;24&quot;&#10;            height=&quot;24&quot;&#10;            viewBox=&quot;0 0 24 24&quot;&#10;            fill=&quot;none&quot;&#10;            stroke=&quot;currentColor&quot;&#10;            strokeWidth=&quot;2&quot;&#10;            strokeLinecap=&quot;round&quot;&#10;            strokeLinejoin=&quot;round&quot;&#10;            className=&quot;h-6 w-6 text-emerald-500&quot;&#10;          &gt;&#10;            &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;            &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;          &lt;/svg&gt;&#10;          &lt;span id=&quot;logo&quot; className=&quot;text-xl font-bold&quot; onClick={() =&gt; window.scrollTo({ top: 0, behavior: 'smooth' })}&gt;Civix&lt;/span&gt;&#10;        &lt;/button&gt;&#10;&#10;        {/* Desktop nav - only show on large screens */}&#10;        &lt;nav className=&quot;hidden lg:flex gap-6&quot;&gt;&#10;          {navLinks.map((navItem) =&gt; (&#10;            &lt;Link key={navItem.title}&#10;              to={navItem.href}&#10;              className='text-sm font-medium hover:text-emerald-500 transition-colors duration-300'&#10;            &gt;&#10;              {navItem.title}&#10;            &lt;/Link&gt;&#10;          ))}&#10;        &lt;/nav&gt;&#10;&#10;&#10;        {/* Hamburger for mobile and tablet */}&#10;        &lt;button&#10;          id=&quot;mobile-nav-toggle&quot;&#10;          className=&quot;lg:hidden flex items-center justify-center p-2 rounded focus:outline-none focus:ring-2 focus:ring-emerald-500&quot;&#10;          aria-label={mobileMenuOpen ? 'Close navigation menu' : 'Open navigation menu'}&#10;          aria-expanded={mobileMenuOpen}&#10;          onClick={() =&gt; setMobileMenuOpen((open) =&gt; !open)}&#10;        &gt;&#10;          &lt;svg className=&quot;h-7 w-7 text-emerald-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;            {mobileMenuOpen ? (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M6 18L18 6M6 6l12 12&quot; /&gt;&#10;            ) : (&#10;              &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M4 8h16M4 16h16&quot; /&gt;&#10;            )}&#10;          &lt;/svg&gt;&#10;        &lt;/button&gt;&#10;&#10;        &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;          &lt;Switch /&gt;&#10;          {/* Dashboard link for authenticated users */}&#10;          {(isSignedIn || token) &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;&#10;          {isAdmin &amp;&amp; (&#10;            &lt;button&#10;              onClick={() =&gt; navigate('/admin')}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Admin Dashboard&#10;            &lt;/button&gt;&#10;          )}&#10;          &#10;          {/* Show logout button when authenticated, login/signup when not */}&#10;          {isSignedIn || token ? (&#10;            &lt;button&#10;              onClick={handleLogout}&#10;              className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-white hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;            &gt;&#10;              Logout&#10;            &lt;/button&gt;&#10;          ) : (&#10;            &lt;&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/login')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Login&#10;              &lt;/button&gt;&#10;              &lt;button&#10;                onClick={() =&gt; navigate('/signup')}&#10;                className=&quot;hidden lg:inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-600 h-9 px-4 py-2&quot;&#10;              &gt;&#10;                Get Started&#10;              &lt;/button&gt;&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Mobile/Tablet menu overlay and panel */}&#10;      {mobileMenuOpen &amp;&amp; (&#10;        &lt;&gt;&#10;          {/* Dark overlay */}&#10;          &lt;div&#10;            className=&quot;lg:hidden fixed inset-0 bg-black/50 backdrop-blur-sm animate-fade-in&quot;&#10;            onClick={() =&gt; setMobileMenuOpen(false)}&#10;            aria-hidden=&quot;true&quot;&#10;          /&gt;&#10;          {/* Panel */}&#10;          &lt;div className=&quot;lg:hidden fixed inset-x-0 top-0 z-[100] animate-fade-slide-up&quot;&gt;&#10;            &lt;nav id=&quot;mobile-nav-panel&quot; className=&quot;relative flex flex-col items-center w-full h-[100vh] bg-white dark:bg-[#18181b] pt-24 gap-6 shadow-xl&quot;&gt;&#10;              &lt;button&#10;                className=&quot;absolute top-6 right-6 text-3xl text-emerald-600 focus:outline-none&quot;&#10;                aria-label=&quot;Close navigation menu&quot;&#10;                onClick={() =&gt; setMobileMenuOpen(false)}&#10;              &gt;&#10;                &amp;times;&#10;              &lt;/button&gt;&#10;&#10;&#10;              {navLinks.map((navItem) =&gt; (&#10;                &lt;Link key={navItem.title}&#10;                  to={navItem.href}&#10;                  onClick={() =&gt; handleNav()}&#10;                  className='text-lg font-medium hover:text-emerald-500 transition-colors duration-300'&#10;                &gt;&#10;                  {navItem.title}&#10;                &lt;/Link&gt;&#10;              ))}&#10;&#10;              {/* Dashboard link for authenticated users in mobile menu */}&#10;              {(isSignedIn || token) &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate(isAdmin ? '/admin' : '/user/dashboard'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;&#10;              {isAdmin &amp;&amp; (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(() =&gt; navigate('/admin'))}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium border border-emerald-500 text-emerald-600 hover:bg-emerald-50 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Admin Dashboard&#10;                &lt;/button&gt;&#10;              )}&#10;              &#10;              {/* Show logout button when authenticated, login/signup when not */}&#10;              {isSignedIn || token ? (&#10;                &lt;button&#10;                  onClick={() =&gt; handleNav(handleLogout)}&#10;                  className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                &gt;&#10;                  Logout&#10;                &lt;/button&gt;&#10;              ) : (&#10;                &lt;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/login'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium border border-input hover:bg-accent hover:text-accent-foreground h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Login&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; handleNav(() =&gt; navigate('/signup'))}&#10;                    className=&quot;w-11/12 rounded-md text-base font-medium bg-emerald-500 text-white hover:bg-emerald-600 h-11 px-4 py-2&quot;&#10;                  &gt;&#10;                    Get Started&#10;                  &lt;/button&gt;&#10;                &lt;/&gt;&#10;              )}&#10;            &lt;/nav&gt;&#10;          &lt;/div&gt;&#10;        &lt;/&gt;&#10;      )}&#10;    &lt;/header&gt;&#10;  );&#10;};&#10;&#10;export default Navbar;&#10;&#10;&#10;&#10;&#10;// import React from 'react';&#10;// import { useNavigate } from 'react-router-dom';&#10;// import Switch from '../DarkModeToggle';&#10;&#10;// const Navbar = () =&gt; {&#10;//   const navigate = useNavigate();&#10;&#10;//   const scrollToTop = () =&gt; {&#10;//     window.scrollTo({ top: 0, behavior: 'smooth' });&#10;//   };&#10;&#10;//   return (&#10;//     &lt;header&#10;//       className=&quot;sticky top-0 z-50 w-full border-b bg-white/95 dark:bg-[hsla(240,5%,15%,0.8)] backdrop-blur&quot;&#10;//       style={{&#10;//         '--tw-bg-opacity': '0.95',&#10;//         backgroundColor: 'rgba(255, 255, 255, 0.95)'&#10;//       }}&#10;//     &gt;&#10;//       &lt;div className=&quot;container flex h-14 items-center justify-between&quot;&gt;&#10;//         &lt;button onClick={scrollToTop} className=&quot;flex items-center gap-2 hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//           &lt;svg&#10;//             xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;//             width=&quot;24&quot;&#10;//             height=&quot;24&quot;&#10;//             viewBox=&quot;0 0 24 24&quot;&#10;//             fill=&quot;none&quot;&#10;//             stroke=&quot;currentColor&quot;&#10;//             strokeWidth=&quot;2&quot;&#10;//             strokeLinecap=&quot;round&quot;&#10;//             strokeLinejoin=&quot;round&quot;&#10;//             className=&quot;h-6 w-6 text-emerald-500&quot;&#10;//           &gt;&#10;//             &lt;path d=&quot;M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z&quot; /&gt;&#10;//             &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; /&gt;&#10;//           &lt;/svg&gt;&#10;//           &lt;span className=&quot;text-xl font-bold&quot;&gt;Civix&lt;/span&gt;&#10;//         &lt;/button&gt;&#10;//         &lt;nav className=&quot;hidden md:flex gap-6&quot;&gt;&#10;//           &lt;a href=&quot;#features&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Features&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#how-it-works&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             How It Works&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#testimonials&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             Testimonials&#10;//           &lt;/a&gt;&#10;//           &lt;a href=&quot;#faq&quot; className=&quot;text-sm font-medium hover:text-emerald-500 transition-colors duration-300&quot;&gt;&#10;//             FAQ&#10;//           &lt;/a&gt;&#10;//         &lt;/nav&gt;&#10;//         &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;//           &lt;Switch /&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/login')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Login&#10;//           &lt;/button&gt;&#10;//           &lt;button&#10;//             onClick={() =&gt; navigate('/signup')}&#10;//             className=&quot;inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-emerald-500 text-primary-foreground hover:bg-emerald-500/90 h-9 px-4 py-2&quot;&#10;//           &gt;&#10;//             Get Started&#10;//           &lt;/button&gt;&#10;//         &lt;/div&gt;&#10;//       &lt;/div&gt;&#10;//     &lt;/header&gt;&#10;//   );&#10;// };&#10;&#10;// export default Navbar;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>